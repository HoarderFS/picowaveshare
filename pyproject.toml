[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "SIM",    # flake8-simplify
    "PTH",    # flake8-use-pathlib
]
ignore = [
    "E501",   # line too long (handled by formatter)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests
"micropython/*" = ["PTH123"]  # MicroPython doesn't have pathlib
"tests/hardware_verification/verify_all_pins.py" = ["PTH123"]  # MicroPython script

[tool.pytest.ini_options]
testpaths = ["python/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=waveshare_relay",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "waveshare-relay"
version = "0.1.0"
description = "Python library for controlling Waveshare Pico Relay B"
readme = "README.md"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: System :: Hardware",
]
requires-python = ">=3.11"
dependencies = [
    "pyserial>=3.5",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "ruff>=0.1.0",
    "black>=23.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/waveshare-relay"
Issues = "https://github.com/yourusername/waveshare-relay/issues"

[tool.setuptools.packages.find]
where = ["python"]
include = ["waveshare_relay*"]